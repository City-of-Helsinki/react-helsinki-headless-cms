@use 'breakpoints';
@import 'spacing';
@import 'typography';

.contentLayout {
  --padding: #{$spacing-layout-2-xs};
  --max-width: calc(#{breakpoints.$container-width-xl} + (2 * var(--padding)));
  overflow: hidden;
  display: flex;
  flex-direction: column;
  height: 100%;

  & > *:not(:last-child) {
    margin: $spacing-layout-2-xs auto;
  }

  @media screen and (min-width: breakpoints.$breakpoint-m) {
    --padding: #{$spacing-layout-xs};
  }
}

.breadcrumbs {
  width: 100%;
  max-width: var(--max-width);
  margin: 0 auto;
  padding: 0 var(--padding);
  box-sizing: border-box;
}

.mainLayout {
  display: flex;
  flex-direction: column;
  flex: 1;
  width: 100%;
}

.contentWrapper {
  flex-grow: 1;
  &.withBorder {
    border-top: 1px solid var(--color-black-20);
  }
}

.content {
  display: flex;
  flex-direction: column;
  width: 100%;

  @media screen and (min-width: breakpoints.$breakpoint-m) {
    flex-direction: row;
  }

  & > *:nth-child(1) {
    @media screen and (min-width: breakpoints.$breakpoint-m) {
      flex: calc((100% / 3) * 2) 0 1;
      max-width: calc((100% / 3) * 2);
      // TODO: Replace with flex-gap when browsers support it
      margin-right: 22px;
    }
  }

  & aside {
    @media screen and (min-width: breakpoints.$breakpoint-m) {
      flex: calc(100% / 3) 0 1;
      // TODO: Replace with flex-gap when browsers support it
      margin-left: 22px;
      margin-top: 2rem;
    }
  }

  a {
    font-size: $fontsize-body-l;
  }

  li {
    font-size: $fontsize-body-l;
    line-height: $lineheight-l;
  }
}

.collectionsWrapper {
  background-color: var(--color-black-5);
  padding-bottom: $spacing-layout-xl;
}

.collectionKorosTop {
  fill: var(--color-white);
}

.collectionsContainer {
  position: relative;
  margin-top: $spacing-2-xl;
  box-sizing: border-box;
  .innerCollectionsWrapper {
    background-color: var(--color-black-5);
    padding-bottom: 96px;
    width: 100%;
    .innerCollectionsContainer {
      background-color: var(--color-black-5);
      margin: 0 auto;
      width: 100%;
      max-width: var(--max-width);
    }
  }
}
